Definition of the Breccian language

    - Breccia in practice is a production of texts, each comprising one or more documents.
    - Here the documents are defined in formal terms as document fracta.

              │
              │
              ├──────┐
              ╵      │     \ [graphical syntax notation], q.v. at end notes
           document  ▲
           fractum   │
              ╷      │
              ├──────┘
              │
              │
              ▼

            figure, The form of a Breccian text.

    document fractum
        / A Breccian document in formal terms.
        - It divides into a head formed as a descriptor, and a body formed as a sequence of body fracta,
          either of which is optional.

                       │
                       │
                       ├──────┐     ┐
                       ╵      │     │
                   descriptor │     │ head
                       ╷      ▼     │
                 ┌─────┤      │     ┘
                 │     ├──────┘
                 │     │            ┐
                 │     ├─────┐      │
                 ▼     ╵     │      │
                 │   body    ▲      │ body
                 │  fractum  │      │
                 │     ╷     │      │
                 │     ├─────┘      │
                 └─────┤            ┘
                       │
                       │
                       ▼

    document title
        - The document title, if any, is determined by the first fractal head in linear order
          that yields a non-empty result after collapsing the whitespace of the relevant part
          of its content according to head type:
            • document head or point head
                - The relevant part is the whole head exclusive of commentary and indentation blinds.
            • divider
                - The relevant part is its first label.



    ━━━━━━━━━━━━━
     Alarm point
    ─────────────
        / A specialized material point.
        - A point with a bullet comprising ‘!!’, or ending with ‘!!’.
        - It forms urgent matter for the attention of authors.
            / E.g. indicating an error in the document.



    ━━━━━━━━━━━━━
     Aside point
    ─────────────
        / A specialized material point.
        - A point with a bullet comprising ‘/’.
        - It forms matter of less prominence than its place would otherwise suggest.
            / E.g. matter to which the reader should give less attention on a first reading.
        - Its descriptor, if present, is largely free form.
            : see `most descriptors are largely free form.$` @ `^^ Descriptor$`


    ━━━━━━━━━━━━━━━━━━━━━━
     Associative reference
    ──────────────────────
        / A command point.
        - It indicates an object (the referent) and associates with it one or more preceding
          character sequences (the referrer, or referrers).
        - Its descriptor has this form:

                            referrer              referent
               ─── gap ──┬── clause ─┬─ gap ─┬─┬── clause ────▶
                         │           │       │ │
                         │           └───────┘ │
                         └─────────────────────┘

                figure, The form of the descriptor in an associative reference.

        - The referrer clause indicates the referrer or referrers.
        - The referent clause indicates the referent.
        - A single referrer may be associated with multiple referents.
            / via multiple, sibling references that indicate the same referrer
        - Multiple referrers may be overlapped or nested in any manner.
            / via multiple, sibling references
            / via a single reference that indicates multiple referrers at once

        referrer clause
            - The referrer clause indicates the referrer, or referrers, by a pattern of text
              occuring in the head of the reference’s parent.

                   ───╴‘re’╶─┬─ gap ─┬─╴‘`’╶─ pattern ─╴‘`’╶────▶
                             │       │
                             └───────┘

                - Failing a parental head, the reference is misplaced and the document malformed.
                    / This occurs only when the parent is a headless document fractum.
            - It works thus:
                if( the pattern contains one or more subexpression grouping constructs ‘(…)’ )
                    : re `subexpression grouping constructs`
                      see https://perldoc.perl.org/perlreref.html#SYNTAX
                    for( each match of the pattern within the head of the reference’s parent )
                        if( at least one subexpression captures a text sequence )
                            + Set as a referrer the union of all captured text sequences.
                else
                    for( each match of the pattern within the head of the reference’s parent )
                        + Set as a referrer the whole of the matching text.
            - The referrer clause is optional.
                - If omitted, then the head of the reference’s parent is taken as the referrer.

        referent clause
            - The referent clause indicates the referent.

                                                      URI
                      ┌─╴‘join’╶─┐             ┌── reference ──┐
                   ───┤          ├──┬─ gap ─┬──┤               ├────▶
                      └──╴‘see’╶─┘  │       │  │   impliable   │
                                    └───────┘  └─── fractum ───┘
                      └───────────┘                indicator
                       referential
                         command

                : re `‘(join)’` see `^^ Jointer$`
                : re `‘(see)’` see `^^ Pointer$`
                : re `(URI)$.*(reference)` see https://tools.ietf.org/html/rfc3986#section-4.1

            / The referential command determines the type and overall function
              of the associative reference.
                : re `type` see `^^◇ associative reference$` @ `^^typology$` @ `^^ Fractum$`
            - The referent clause works thus:
                if( a URI reference is given )
                    + Take the referent of the URI reference as the indicated referent.
                else
                    - An impliable fractum indicator is given.
                    if( its first component (the direct indicator) is omitted )
                        + Set as first component a direct indicator with a pattern `p` formed thus:
                            if( the reference has a referrer clause )
                                + Set `p` to the pattern given in the referrer clause.
                                + Set `p` to broadened to division titling( `p` ).
                                    : see `^^broadened to division titling\( pattern \)$`
                                + Anchor `p` by appending ‘$$’.
                            else
                                + Set `p` to generalized pattern( head of the reference’s parent ).
                                    : see `^^generalized pattern\( fractal head \)$`
                    if( the pattern of its direct indicator contains one or more
                         subexpression grouping constructs ‘(…)’ )
                        : re `subexpression grouping constructs`
                          see https://perldoc.perl.org/perlreref.html#SYNTAX
                        + Take as the indicated referent the union of the text sequences they capture.
                    else
                        + Take as the indicated referent the whole of the indicated fractum.



    ━━━━━━━━
     Bullet
    ────────
        / Part of a point head.
        - Its internal form is determined in part by external boundaries.

                 perfect   ┊      start                        end            ┊   descriptor,
               indentation ┊╶─── sequence ─┬─┬─ interior ─┬─ character ─┬───▶ ┊  head successor,
                           ┊               │ │            │             │     ┊ or end of document
                                           │ └────────────┘             │     ┊
                                           └────────────────────────────┘
                                    i              ii          iii

                    : re `head successor` see `^^\| the head successor$` @ `^^ Fractum$`
                figure, The form of a bullet.

        - While the precise internal form varies according to the point type, every bullet is formally
          conditioned by basic contraints operating in several regions, here numbered i, ii, iii.
        i. start sequence, one of:
            | a character that is neither whitespace nor backslash (5C) nor divider mark
                : see `^^character identification$` @ `^^ Notes$`
            | one or more backslashes immediately followed by
              a character that is neither whitespace nor backslash
                \ Whitespace would make it a sequence of a comment block, not a bullet.
        ii. interior
            - Coming after the start character and before the end character.
            - Here the bullet may contain spacing characters, and nowhere else.
                - One or more plain spaces (20) may follow an alphanumeric character.
                    : see `^^character identification$` @ `^^ Notes$`
                    - Following any other character (C), they would expel both C and themselves
                      from the interior.
                        / So making C either the end character if it meets the constraints of one,
                          or part of the end boundary.
                - One or more no-break spaces (A0) may follow any non-alphanumeric character
                  other than a plain space, and other than a backslash occuring in a backslash sequence
                  at the start of the bullet. \ The backslash case is excluded because it would
                    \ complicate Breccia mode for Emacs, and anyway appears to be useless.
                        : re `Breccia mode for Emacs` see http://reluk.ca/project/Breccia/Emacs/
                    - Here the excluded sequences are not expulsive, rather they are simply forbidden.
                - No other whitespace is allowed.
                    / Namely no newline; one could never be part of a bullet, only of its end boundary.
        iii. end character, a character that is none of:
            | whitespace
            | a backslash subsequent to a plain space of the interior
                / Rather those characters would comprise the initial part of an end boundary in the form
                  of inline commentary, so forming part of the descriptor.



    ━━━━━━━━━━━━━━━
     Command point
    ───────────────
        / A formal point.
        - A point with a bullet comprising ‘:’.
        - The form of its descriptor, if any, varies with the type of command point.
            : re `type of command point` see `^^typology$` @ `^^ Fractum$`
            / Only in the case of a *null command* may the descriptor be omitted.
        - Processors interpret command points and execute their commands in linear order.

        null command
            - A command point that does nothing. \ It is an artifact of formal consistency,
                \ the descriptor being optional in the head of all point types.
            - Its descriptor, if present, has this form:

                   ─── gap ───▶



    ━━━━━━━━━━━━
     Commentary
    ────────────
        / Part of a descriptor.
        - Commentary is matter for the attention of authors, publishers or other atypical readers.
        - Formally it appears as either inline commentary or block commentary.

        inline commentary
            - Commentary subsequent to non-commentary, non-whitespace on the same line. \ [‘commentary’]

                                                         inline commentary
                                             ┌─────────────────────────────────────────┐
                 
                                                                   ┌───╴◀────────┐
                                 ┌─╴◀────┐     ┌─╴◀────┐           │             │
                   inline non-   │       │ ┊   │       │           │   inline    │         ┊ end of
                   -whitespace ╶─┴─╴‘ ’╶─┘ ┊╶──┴─╴‘\’╶─┴─┬─╴‘ ’╶─┬─┴─ character ─┴─┬─┬───▶ ┊ line
                                           ┊             │       │                 │ │     ┊
                                                         │       └─────────────────┘ │
                                                         └───────────────────────────┘

                    figure, The form of inline commentary.

        block commentary
            - Commentary comprising whole lines. \ [‘commentary’]
            - Each line has this form:

                                                                  ┌───╴◀────────┐
                                  ┌─╴◀────┐   ┌─╴◀────┐           │             │
                      start ┊     │       │   │       │           │   inline    │         ┊ end of
                       of   ┊╶──┬─┴─╴‘ ’╶─┴─┬─┴─╴‘\’╶─┴─┬─╴‘ ’╶─┬─┴─ character ─┴─┬─┬───▶ ┊ line
                      line  ┊   │           │           │       │                 │ │     ┊
                                └───────────┘           │       └─────────────────┘ │
                                                        └───────────────────────────┘

                    figure, The form of a line of block commentary.



    ━━━━━━━━━━━━
     Descriptor
    ────────────
        / Part of a document head or point head.
        - Elaborative, explanatory text at the head of a document or point.
        - It starts with a gap.

                           · · · ·
                           ·     ·       ┊  head successor,
               ─── gap ─── ·  ?  · ────▶ ┊ or end of document
                           ·     ·       ┊
                           · · · ·
                    : re `head successor` see `^^\| the head successor$` @ `^^ Fractum$`
                figure, The form of a descriptor.

        - What follows the gap (?) depends on the type of fractum in which the descriptor appears.
        - Here most descriptors are largely free form, constrained only by the end boundary
          of their head (as shown).
            - The descriptor of a formal point, however, is further constrained.
                : re `formal point` see `^^◇ formal point$` @ `^^typology$` @ `^^ Fractum$`
        gap
            - A formal intermediary within a descriptor.

                  ┌────────────────────────╴◀──────────────────────────────────┐
                  │                                                            │
                  │ ┌───────────────────────────╴‘ ’╶────────────────────────┐ │
                  │ │                                                        │ │
               ───┴─┤                                           block        ├─┴───▶
                    │                                    ┌─── commentary ──┐ │
                    │             inline                 │                 │ │
                    └─┬─╴‘ ’╶── commentary ─┬─ newline ──┤   indentation   ├─┘
                      │                     │            ├───   blind   ───┤
                      └─────────────────────┘            │                 │
                                                         └─────────────────┘



    ━━━━━━━━━━
     Division
    ──────────
        / A body fractum.
        - A body fractum forming a part of the document markedly separate from other parts.
            : re `markedly separate` see `^^divider$`
        - Its head is called a divider.

        ─────────
         divider
        ┈┈┈┈┈┈┈┈┈
            - The head of a division.
            - It comprises one or more divider segments.
            - Therefore no two dividers can be made contiguous; rather they become two segments
              of one divider.

                      │
                      │
                      ├─────┐
                      ╵     │
                   divider  ▲
                   segment  │
                      ╷     │
                      ├─────┘
                      │
                      │
                      ▼

                    figure, The form of a divider.

            divider segment
                / Part of a divider.
                - It starts with a perfectly indented divider mark.

                         perfect      divider
                       indentation ─── mark
                                        ╷
                                        │
                                  ┌─────┤
                                  │     ├───────┐
                                  │     ╵       │
                                  │  character  ▲
                                  │     ╷       │
                                  │     ├───────┘
                                  └─────┤
                                        │
                                        │
                                        ▼
                              ╴╴╴╴╴╴╴╴╴╴╴╴╴╴╴╴╴╴╴╴╴╴╴
                              divider segment, point,
                                or end of document

                        figure, The form of a divider segment.

                - Any characters subsequent to the divider mark are largely free form, constrained only
                  by the end boundary of the segment, as shown.

            divider mark
                - A character in the Unicode range 2500-259F.
                    : re `2500-259F` see `^^character identification$` @ `^^ Notes$`
                - One of a drawing character or inversion mark.
                drawing character
                    - Unicode 2500-2587, 2589-258F, 2591-259F.
                inversion mark
                    - Unicode 2588 (full block), 2590 (right half block).

        ────────────────
         division label
        ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
            / Part of a divider segment.
            - A sequence in a divider of non divider-mark characters.

                               │
                               │
                               ╵
                              non
                          divider-mark,
                         non-whitespace
                               ╷
                     ┌─────────┤
                     │ ┌───────┤
                     │ │       ├────────┐
                     │ │       ╵        │
                     │ │      non       ▲
                     │ │  divider-mark  │
                     │ │       ╷        │
                     │ │       ├────────┘
                     │ └───────┤
                     │         ╵
                     │        non
                     │    divider-mark,
                     │   non-whitespace
                     │         ╷
                     └─────────┤
                               │
                               │
                               ▼

                    figure, The form of a division label.

            inverse labeling
                / A deprecated part of a division label.
                - It occurs at the start of a division label bounded by an inversion marker.

                       inversion ┊          non                  non                non
                         marker  ┊╶───╴ divider-mark, ─┬─┬─  divider-mark, ─┬── divider-mark, ─┬───▶
                                 ┊     non-whitespace  │ │   non-newline    │  non-whitespace  │
                                                       │ │                  │                  │
                                                       │ └──────────────────┘                  │
                                                       └───────────────────────────────────────┘

                        figure, The form of inverse labeling.

                - Presenters show inverse labeling, together with any space characters
                  that immediately precede or follow it, in reverse video.
                    \ Not ‘inverse video’.  https://www.lexico.com/en/definition/reverse_video
                    - Exception: inline commentary is excluded and presented as is.
                - Inverse labeling is deprecated, liable to be removed from the language.
                    \ It concerns presentation alone, making it improper to the language.
                    \ It has turned out to be largely useless thus far.  2019-9
                inversion marker

                                           ┌─╴◀────┐
                              inversion    │       │
                           ───  mark   ──┬─┴─╴‘ ’╶─┴─┬───▶
                                         │           │
                                         └───────────┘

                    - Where a full block character (2588) succeeds an inversion mark on the same line,
                      with at most non divider-mark characters in between, that full block is disabled
                      as an inversion mark.
                        : see `^^character identification$` @ `^^ Notes$`
                        / The full block pairs with the preceding inversion mark and by itself does not
                          start a new sequence of inverse labeling.

            division titling
                / Part of a division label.
                - Division titling is any part of a division label that (discounting spaces, 20)
                  leads the line on which it occurs.
                    : see `^^character identification$` @ `^^ Notes$`
                -
                       ┈┈┈
                     
                         this is division titling
                     
                       ┈┈┈  this is not

                        figure, Example of division titling.  The drawing sequences here
                          are perfectly indented.

                - Presenters may give greater prominence to division titling,
                  e.g. showing it in bold face.


        ───────────────────
         apparent division
        ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
            - A group of siblings led by a bodiless division (bare divider).
            - It comprises the bodiless division and its subsequent siblings (in linear order)
              prior to the next sibling (if any) that is itself a division.
            / It is a flat form of partition, as opposed to the hierarchical form of true division.
            / It may be transformed to a true division by indenting the siblings to instead
              make them children of the divider.



    ━━━━━━━━━
     Fractum
    ─────────
        - The basic formal unit of Breccian composition, hierarchy and order.

        typology
            • document fractum
            ◇ body fractum
                • division
                ◇ point
                    ◇ formal point
                        ◇ command point
                            ◇ associative reference
                                • jointer
                                • pointer
                            • null command
                    ◇ material point
                        ◇ specialized material point
                            • alarm point
                            • aside point
                            • task point
                        • generic point

        abstract form
            - A fractum divides formally into two parts: a head and a body.

                       │
                       │
                       ╵
                    · · · ·        ┐
                    ·     ·        │
                    ·  ?  ·        │ head
                    ·     ·        │
                    · · · ·        ┘
                       ╷
                       │
                 ┌─────┤           ┐
                 │     ├─────┐     │
                 │     ╵     │     │
                 │   body    ▲     │ body
                 │  fractum  │     │
                 │     ╷     │     │
                 │     ├─────┘     │
                 └─────┤           ┘
                       │
                       │
                       ▼

            head
                - The part of a fractum exclusive of its children.
                - Its internal form (abstracted from the diagram) varies according to the fractum type.
                - Its end boundary (not fully shown) always comprises one of:
                    | the head successor
                        - The head successor (S) is the fractum succeeding the head in linear order.
                        - In terms relative to the head’s own fractum F, S is the first applicable of:
                            | the first child of F
                                / in its body, that is
                            | the next sibling of F
                            | the next sibling of the nearest ancestor of F
                    | the end of the document
            body
                - The part of a fractum comprising its children alone; a sequence of sibling body fracta.
                - A body is always optional: regardless of the fractum type, it may be omitted.

        fractal relatives
            • parent
                - The parent of a fractum is the first applicable of:
                    | its nearest (in linear order) fractal precedecessor of less indentation
                    | the document fractum
            • child
                - A fractum that has a parent.
                - All body fracta are children.
                - No document fractum is a child.


        ─────────────────────────────
         impliable fractum indicator
        ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
            - An indicator of a fractum, here referred to as ‘the principal fractum’.

                                         ┌─────────╴◀────────────┐
                                         │                       │
                          direct         │            ancestor   │                  document
                   ───┬─ indicator ─┬──┬─┴─┬─ gap ─┬─ indicator ─┴──┬──┬─┬─ gap ─┬─ indicator ─┬───▶
                      │             │  │   │       │                │  │ │       │             │
                      └─────────────┘  │   └───────┘                │  │ └───────┘             │
                                       └────────────────────────────┘  └───────────────────────┘

                figure, The form of an impliable fractum indicator.

            - Where used in the languagage definition, this form is qualified by the specification
              of a default value for its first component (the direct indicator), which also serves
              as the implied value of the whole indicator if all its components are omitted.
            - It may be used to indicate a non-Breccian referent.
                - Where a processor is unable to find such a referent, or otherwise to deal with it,
                  that should not prevent the reader trying to deal with it manually.

            direct indicator
                - A indicator of the principal fractum by the pattern of its own text.

                       ───╴‘`’╶─ pattern ─╴‘`’╶───▶

                - The indication it gives is the return value of this procedure:
                    if( the pattern contains one or more subexpression grouping constructs ‘(…)’ )
                        : re `subexpression grouping constructs`
                          see https://perldoc.perl.org/perlreref.html#SYNTAX
                        for( each match of the pattern )
                            if( at least one subexpression captures a text sequence,
                                 and all captured text sequences lie within the same fractal head )
                                + Set as indicated the fractal head’s fractum.
                    else
                        for( each match of the pattern )
                            + Set as indicated the fractum whose head contains the first matched character
                              in linear order.
                    if( exactly one fractum is indicated )
                        return( the indicated fractum )
                    if( the referent document is Breccian )
                        throw( error, the indicator is ambiguous )

                generalized pattern( fractal head )
                    / Returns a generalized pattern of the given `fractal head`, which is commonly used
                      to specify the default value for a direct indicator.
                    + Set `p` to the text of the given `fractal head`.
                    + Trim `p` of commentary.
                    + Trim `p` of leading whitespace on its first line.
                    + Trim `p` of trailing whitespace.
                    + Set `p` to literalized pattern( `p` ).
                        : see `^^literalized pattern\( string \)$`
                    + Collapse all remaining whitespace of `p` to ‘\s+’.
                        / Neutralizing differences in indentation and line wrapping.
                    if( `fractal head` is a divider )
                        + Anchor `p` by prepending ‘^^’.
                        for( each repetitive sequence (S) of a drawing character (C) in `p` )
                            + Collapse S to a single C followed by ‘+’.
                            / Neutralizing differences in horizontal length, e.g. owing to indentation.
                    else if( `p` ends with a literalized ‘+’ )
                        / Then `fractal head` may comprise a task bullet.
                        if( `p` does not *comprise* a literalized ‘+’ )
                            / Then the (potential) bullet here is not ‘+’ alone.
                            + Append ‘?’.
                                / Making the (potential) task mark ‘+’ optional in order to broaden
                                  the pattern and match other bullet types, e.g. a generic bullet.
                                / A use case here is to join a generic head ‘foo’, for instance,
                                  from a task head ‘foo+’, in order to task ‘foo’ for action.
                        + Set `p` to broadened to division titling( `p` ).
                            : see `^^broadened to division titling\( pattern \)$`
                    + Anchor `p` by appending ‘$$’.
                    return( `p` )

                broadened to division titling( p )
                    / Returns the given pattern `p` broadened to match division titling.
                    + Anchor `p` by prepending ‘^ *’.
                    + Ensure that `p` functions in *case insensitive* mode (`i`).
                        : re `\*case insensitive\* mode`
                          see https://perldoc.perl.org/perlreref.html#OPERATORS
                    return( `p` )

            ancestor indicator
                - An indicator of an ancestor of the principal fractum.
                - It indicates the ancestor by the pattern of its text.

                       ───╴‘@’╶─┬─ gap ─┬─╴‘`’╶─ pattern ─╴‘`’╶───▶
                                │       │
                                └───────┘

                - Where multiple indicators appear in series, each successor indicates an ancestor
                  of the one indicated by its predecessor.

            document indicator
                - An indicator of the document of the principal fractum.

                       ───╴‘@’╶─┬─ gap ─┬── URI reference ────▶
                                │       │
                                └───────┘

                    : re `URI reference` see https://tools.ietf.org/html/rfc3986#section-4.1



    ━━━━━━━━━━━━━━━
     Generic point
    ───────────────
        / A material point.
        - A point with a bullet outside the form of any specialized material point.
        - Otherwise a generic point is largely free form.
            - Its bullet is conditioned only by the basic constraints.
                : re `basic constraints` see `(basic constraints) ` @ `^^ Bullet$`
            - Likewise its descriptor, which may also be omitted.
                : re `Likewise its descriptor`
                  see `most descriptors are largely free form.$` @ `^^ Descriptor$`



    ━━━━━━━━━━━━━━━━━━━
     Indentation blind
    ───────────────────
        / Part of a descriptor.
        - A sequence of lines each headed by a single no-break space (A0)
          and thereby excluded from the Breccian rules of indentation.
            : see `^^character identification$` @ `^^ Notes$`
        -
                                  ┌───╴◀────────┐
                                  │             │
               start ┊            │   inline    │
                of   ┊╶─── A0 ──┬─┴─ character ─┴─┬───▶
               line  ┊          │                 │
                                └─────────────────┘

                figure, The form of each line in a blind.  This figure is itself an example
                  of a blind comprising six lines.

        - Regardless of its indentation, a blind does not interrupt the fractal head in which it occurs;
          rather the head continues (blindly in regard to indentation) through the blind.



    ━━━━━━━━━
     Jointer
    ─────────
        - An associative reference with a referential command of `join`.
        - In effect it stands for the fractal body of its referent.
        - Moreover, if the jointer has a referrer clause, then it indicates the referrer as the cause
          of this effect.
        effect
            - The effect is located in the simulacrum.
            - There each parent of the jointer gains for a child each child of the referent
              that does not duplicate a pre-existing child.
                / Where in the source code the referent fractum itself has a jointer as its child,
                  the effect will apply recursively in the simulacrum.
            - By the same token, the children of the referent gain for a parent each parent
              of the jointer that does not duplicate a pre-existing parent.
                / Again, the effect here is recursive.
            - In both cases, the duplication test ignores variations in commentary and whitespacing.



    ━━━━━━━━━━━━━━━━━━
     Pattern matching
    ──────────────────
        - Matching character sequences with regular expressions.
        pattern
            - The form of a pattern is a Perl-compatible regular expression modified as follows.
                : re `Perl compatible regular expression` see https://perldoc.perl.org/perlreref.html
                • `\t` symbolizes not a tab, but one unit of perfect indentation.
                • `^^` expands to `^\t*`, an anchored, leading sequence of perfect indentation.
                    - To put an actual `^^` in the pattern, insert a regexp comment, as with `^(?#)^`.
                • `$$` expands to `(?: +\\(?: .*)?)?$`, allowing for inline commentary and ignoring it.
                    - To put an actual `$$` in the pattern, insert a regexp comment, as with `$(?#)$`.
                • Literal backquote characters ‘`’ are forbidden.
                    - Patterns in Breccia are formally delimited using backquote characters ‘`’.
                    - To put a backquote character ‘`’ in a pattern, escape it with a backslash ‘\`’.
                    / Of course, backslashes themselves remain escapable, too.
                        / The trailing backquote delimiter in pattern `foo\\`, for example, is not
                          escaped by the preceding backslash because the backslash itself is escaped.
                • Breccian inline commentary is forbidden.
                    - No start sequence of inline commentary may appear in the pattern.
                        / For example `·\·` or `·\\·`, where each ‘·’ stands for a space character.
                    - Replace it with an equivalent.
                        / For example `··` and `·\N{U+005C}·` respectively.
            - Patterns function in multiline mode, aka option `m`.
                : re `(multiline mode).+(option \`m\`)`
                  see https://perldoc.perl.org/perlreref.html#OPERATORS
        literalized pattern( string )
            / Returns the given string as a literally enquoted pattern, as defined for Perl `quotemeta`.
                : re `quotemeta` see https://perldoc.perl.org/functions/quotemeta.html



    ━━━━━━━
     Point
    ───────
        / A body fractum.
        - The more common of the body fractum types.
            : re `body fractum types` see `^^typology$` @ `^^ Fractum$`
        - Its head comprises a perfectly indented bullet, and often a descriptor.

               start ┊       perfect                                       ┊  head successor,
                of   ┊╶─── indentation ─── bullet ──┬── descriptor ──┬───▶ ┊ or end of document
               line  ┊                              │                │     ┊
                                                    └────────────────┘
                    : re `head successor` see `^^\| the head successor$` @ `^^ Fractum$`
                figure, The form of a point head.

        - The internal form of the bullet, the internal form of the descriptor,
          and whether the descriptor may be omitted all depend on the type of point.
            : re `type of point` see `^^typology$` @ `^^ Fractum$`



    ━━━━━━━━━
     Pointer
    ─────────
        - An associative reference with a referential command of `see`.
        - It directs the reader’s attention from the referrer to the referent.



    ━━━━━━━━━━━━
     Simulacrum
    ────────────
        - A simulacrum is the dynamic, runtime form of a Breccian text,
          as opposed to the static, written form of its source code.
        - From the original static form, the simulacrum is transformed at runtime by the effect
          of embedded command points.
        default referent: source or simulacral?
            - Throughout the language definition, the default for formal referents is the source code.
            - Where it might otherwise be questioned whether the definition is referring to a source
              versus a simulacral form of the text, it is taken as referring to the source form.



    ━━━━━━━━━━━━
     Task point
    ────────────
        / A specialized material point.
        - A point with a bullet comprising ‘+’, or ending with ‘+’.
        - It describes work to be done or undertaken.
            / After the definition of ‘task’ from the Oxford English dictionary.
                : see https://www.lexico.com/en/definition/task
        \ Defining a specialized point for tasking is justified by the Breccian purpose of drafting,
        \ for which inline tasking is an important capability.
            \ re `purpose of drafting` see `for outlining and drafting` @ README.html



    ━━━━━━━━━━━━
     Whitespace
    ────────────
        / A class of character.
        allowed whitespace
            : see `^^character identification$` @ `^^ Notes$`
            • space (20)
            • newline (A, D)
            • no-break space (A0) as described for use in bullets and indentation blinds
            \ Allowing any other horizontal whitespace (9, 2000-200A, 202F, 205F, 3000)
            \ would be too confusing in Breccia, where indentation determines syntax.
        perfect indentation
            - Perfect indentation comes at the start of a line.
            - It comprises zero or more segments of space characters, each four in length.

                           ┌─────────╴◀───────────┐
               start ┊     │                      │
                of   ┊╶──┬─┴─╴‘ ’╶╴‘ ’╶╴‘ ’╶╴‘ ’╶─┴─┬───▶
               line  ┊   │                          │
                         └──────────────────────────┘



    ━━━━━━━
     Notes
    ───────
        character identification
            - Characters are here identified by the hexadecimal codes of the Unicode standard.
                : re `Unicode standard` see https://www.unicode.org/standard/standard.html
      \ [‘commentary’]
      \     - It comprises commentary, but not necessarily a comment.
      \     - Rather it might be only part of a larger comment that extends across several lines.
      \     - A comment might begin as inline commentary, for example, then continue as block commentary.
      \ [graphical syntax notation]
      \     - The present text uses syntax diagrams because it is aimed at Breccian authors in general,
      \       who are not expected to be comfortable with a textual notation such as Backus-Naur Form.



                                        \ Copyright © 2019, Michael Allan and contributors.  Licence MIT.
