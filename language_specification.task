Breccia: specification of the markup language

    = define syntax graphically
        - as in the JavaScript specification
        - instead of textually

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Aside point`
    < a type of material point
    - bulleted ‘/’

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Bullet`
    - all points begin with a bullet
    * form
        - perfectly indented
        - first character, one of:
            ∪ neither whitespace nor a backslash
            ∪ a backslash
                - immediately followed by zero or more backslashes
                  and a character that is neither whitespace nor a backslash
                ( viz. not block commentary
        - end boundary, one of:
            ∪ inline commentary
            ∪ a space immediately after a non-alphanumeric, non-space character
            ∪ a newline and any spaces that precede it
        - space characters may be embedded within a bullet either by placing them immediately after
          an alphanumeric character, or by using no-break space characters (Unicode A0) instead

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Citation`
    * inline citation
        - a URI in a place that does not call for a URI
            ( e.g. mixed in with ordinary text
            - not a URI reference
                - here URI references go unrecognized by the parser
                ( for lack of any reliable distinguishing mark
        - when followed immediately by punctuation (such as ‘.’)
          that might otherwise be taken as part of the URI,
          the URI must be quoted, e.g. by backquotes or angle braces
    * associative citation
        < § command point § associative citation

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Command point`
    < a type of formal point
    - bulleted ‘:’
    - commands execute in document order
    + associative citation
        < a type of command point
        - associates for citation purposes a preceding character sequence (the referrer)
          with a particular referent
        - referrers may overlap or nest in any manner
        - a single referrer may associate with multiple referents
        = factor out the particular associative subform `@` -
            - from the general associative form '…', which may have (in future) other subforms
            - considering ‘;’ as a separator of multiple subforms within the same associative form
        * form

              : ['PATTERN']  @  REFERENT-URI

              : ['PATTERN']  @  NODAL-REFERENT-INDICATOR  [[@] REFERENT-URI]

            - quoting with either ‘"’ (Unicode 22) or ‘'’ (Unicode 27)
            - PATTERN
                - a Perl compatible regular expression
                - indicates the referrer as the part of the parent head which matches the pattern
                    - failing a parent head, the command point is misplaced and the document malformed
                        < this occurs only when the parent is a (headless) document node
                - optional, by default the referrer is the whole of the parent head
            - referent indicator
                - NODAL-REFERENT-INDICATOR
                    - a nodal indicator
                        ( § node § nodal indicator
                    - used only to cite a Breccian source
                    - indicates the referent as a Breccian child node
                - REFERENT-URI
                    - a URI reference, indicator of either the referent
                      or (in the presence of a nodal indicator) the referent’s document
                    - optional in the presence of a nodal indicator,
                      where it defaults to the same document as the referrer
    + null command
        < a type of command point
        - does nothing
        * form

              :

    + set perfect indentation
        < a type of command point
        - specifies the number of space characters in each unit of perfect indentation
            - the default is 4
      / - applies to subsequent siblings and their ancestors
      // it would overburden syntax highlighters, such as that of `Emacs/Breccia_mode.el`
        - not yet implemented, pending need
        * form

              : indent NUMBER

            - the minimum is 2

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Commentary`
    * form
        ( per line
        - begins with one or more consecutive backslashes ‘\’ (Unicode 5C)
            - immediately preceded by a space or the line start
            - immediately followed by a space or the line end
        - continues to the line end
    + inline commentary
        - commentary subsequent to non-commentary on the same line
        ( ‘commentary’ not ‘comment’, because the comment as a whole may extend across lines
    + block commentary
        * comment block
            - a sequence of lines comprising commentary alone
            - a comment block is part of the node head that starts before it in document order
                - in the case of document node, the head may comprise a comment block alone
        * comment block label
            - in a comment block
            - in a line of commentary delimited by two or more consecutive backslashes ‘\\’
            - the label is the part subsequent to the backslash delimiter,
              exclusive of terminal whitespace

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Divider`
    < a type of child node
    * head form
        - begins with a perfectly indented line headed by a division mark
        - the end boundary is the next node headed by a character
          other than a division mark, or the end of the document
        - it follows that no two divider heads are contiguous,
          rather their combination forms one divider head
    + division mark
        - Unicode 2500-259F
        < division mark = drawing character ∪ inversion mark
        * drawing character
            - Unicode 2500-2587, 2589-258F, 2591-259F
        * inversion mark
            - Unicode 2588 (full block), 2590 (right half block)
    + divider label
        - a sequence of non-division-mark characters in a divider head,
          exclusive of terminal whitespace
        * inverse label
            - a sequence of non-division-mark, non-newline characters in a divider head,
              exclusive of terminal whitespace, which is preceded on the same line by an inversion mark
              with at most space characters between the two
            - normally the inverse label, together with any terminal whitespace,
              is presented in inverse video
                - except that any inline commentary is still presented in plain video
            - where a full block character succeeds an inversion mark on the same line,
              with at most non-division-mark characters in between,
              that full block is disabled as an inversion mark
                - viz. the full block pairs with the preceding inversion mark,
                  and by itself does not start a new inverse label
                - viz. a single full block trailing an inverse label cannot start a second inverse label
        * title
            - a divider label that leads a line, with at most space characters in front
            - normally it is displayed with greater prominence than an ordinary label,
              e.g. using a bold face

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Document`
    < a type of node
    - comprising any number of child nodes, possibly preceded by a document head
    * document title
        - any document title is determined by the first nodal head in document order that yields
          a non-empty result after collapsing the whitespace of the relevant part of its content,
          according to the node type:
            | document or point
                - the non-commentary content of its head
            | divider
                - the first label of its head
    * document head
        - any text prior to the first child node of the document

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Exception point`
    < a type of material point
    - bullet comprising or terminated ‘!!’
    - justified by the purpose of drafting, where the ability to note exceptions is a useful aid
        ( /project.brec § definition

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Generic point`
    < a type of material point
    - a material point of a form here assigned no special role

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Jointer`
    < a type of formal point
    * example

          ⋱⋱ etc/whatever.br

    * form

          ⋱[⋱]  ['NODAL-PATTERN']  [NODAL-SCOPER]  [[@] URI-REFERENCE]

        - the diagonal ellipsis (Unicode 22F1) may be single ‘⋱’ or double ‘⋱⋱’
        - quoting with either ‘"’ (Unicode 22) or ‘'’ (Unicode 27)
        - NODAL-PATTERN
            - the pattern of the subjoint node
                ( § node § nodal pattern
            - optional, defaults to the head of the jointer’s parent modified thus:
                - trimmed of commentary
                - trimmed of leading whitespace on the first line
                - regexp quoted
                - all whitespace collapsed to \s+
                    ( neutralizing differences in indentation and line wrapping
                - in the case of a parent divider
                    - all repeats of a drawing character C collapsed to C+
                        ( neutralizing differences in horizontal length, e.g. owing to indentation
                - anchored by prepending with `\i` -
            - will not match a jointer
                = move to a functional §
            - modification to the pattern form in this context
                - `\q` expands to the default modified thus:
                    - in the case of point, exclusive of the leading portion
                      comprised of the bullet through the first letter of the descriptor
                        ( excluded as one may wish to alter the case of the first letter
                        - if there is no descriptor, or it ends with its first letter,
                          then `\q` is misplaced, and therefore the pattern is malformed
        - NODAL-SCOPER
            - the scope qualifier of the NODAL-PATTERN
                ( § node § nodal scoper
        - URI-REFERENCE
            - URI reference of the document of the subjoint node
            - the use of the ‘@’ separator is optional, a matter of preference
            - optional, defaults to the same document as the jointer

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Node`
    + typology
        < node
            * document
            < child node
                * divider
                * point
    + form
        < node
            * head
                - the part of the node exclusive of its children
            * body
                - the part of the node comprising its children alone
    + relations
        * parent
            - the parent of a node is its nearest nodal precedecessor
              (in document order) of less indentation, or (failing that) the document node
        * child
            - a node that has a parent is thereby a child
            - all nodes are children except the document node
    + nodal indicator
        - form

              'NODAL-PATTERN'  [NODAL-SCOPER]

            - quoting with either ‘"’ (Unicode 22) or ‘'’ (Unicode 27)
            - NODAL-PATTERN
                - the pattern of the indicated node
                    ( § nodal pattern
            - NODAL-SCOPER
                - the scope qualifier of the given NODAL-PATTERN
                    ( § nodal scoper
    + nodal pattern
        - a modified, Perl compatible regular expression
        - modifications:
            - `\t` symbolizes not a tab, but one unit of perfect indentation
            - `^^` expands to `^\t*`, an anchored, leading sequence of perfect indentation
    + nodal scoper
        - a scope qualifier for a nodal pattern
        - form

              @ ANCESTOR-INDICATOR

            - ANCESTOR-INDICATOR
                - a nodal indicator
                    ( § nodal indicator
                - indicator of an ancestor node within whose content the pattern is to be sought
                - likewise the indicated ancestor may be scoped by indication of its own ancestor,
                  and so on, as the nodal indicator form is self referential

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Point`
    * typology
        < node
            < point
                < formal point
                    - command point
                    - jointer
                < material point
                    - aside point
                    - exception point
                    - generic point
                    - task point
    * head form
        - begins with a bullet
        - end boundary is the next node in document order, or the end of the document

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Task point`
    < a type of material point
    - bullet comprising or terminated ‘+’
    - justified by the purpose of drafting, for which inline tasking is a useful aid
        ( /project.brec § definition

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Whitespace`
    - the space character is allowed
        < Unicode 20
    - newline characters are allowed
        < Unicode A, D
    - the no-break space is allowed in bullets, forbidden in all other contexts
        < Unicode A0
    - other horizontal whitespace, including the tab character, is forbidden in all contexts
        < Unicode 9, 2000-200A, 202F, 205F, 3000
        - too confusing in a context where spacing determines syntax
        - too difficult to deal with



                                         Copyright © 2019, Michael Allan and contributors.  Licence MIT.
